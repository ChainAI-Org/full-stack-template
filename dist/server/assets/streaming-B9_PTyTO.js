import{jsx as t}from"react/jsx-runtime";import{Suspense as m}from"react";const f=!0;function p(){return t(m,{fallback:t("p",{children:"Waiting for content"}),children:t(c,{})})}function c(){const e=o({id:"index",message:"Delayed by Suspense API",seconds:5});return t("p",{children:e})}const n=new Map;function o({id:e,message:r,seconds:a}){const s=n.get(e);if(s){if(s.message)return n.delete(e),s.message;if(s.promise)throw s.promise}else return n.set(e,{message:null,promise:new Promise(i=>{setTimeout(()=>{n.get(e).message=r,i()},a*1e3)})}),o({id:e,message:r})}export{p as default,f as streaming};
